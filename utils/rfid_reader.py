import time
from database.database_utils import executar_query

def ler_rfid() -> str | None:
    """
    L√™ o c√≥digo RFID utilizando a entrada padr√£o, como se o leitor
    estivesse se comportando como um teclado.
    
    O usu√°rio dever√° digitar (ou o leitor enviar√° automaticamente) o c√≥digo
    e pressionar Enter.
    """
    try:
        print("Aguardando leitura do RFID... (Digite o c√≥digo e pressione Enter)")
        rfid_code = input().strip()
        if rfid_code:
            print(f"RFID lido: {rfid_code}")
            return rfid_code
        else:
            print("Nenhum c√≥digo RFID lido.")
            return None
    except Exception as e:
        print(f"Erro ao ler RFID: {e}")
        return None

def get_user_from_rfid() -> str | None:
    """
    L√™ o RFID via entrada padr√£o e consulta diretamente o banco de dados.
    
    Retorna:
        str: Nome do usu√°rio, se encontrado.
        None: Se n√£o encontrado ou em caso de erro.
    """
    try:
        rfid_code = ler_rfid()
        if not rfid_code:
            print("‚ö†Ô∏è Nenhum c√≥digo RFID lido.")
            return None

        query = "SELECT nome FROM usuarios WHERE rfid = ?"
        user = executar_query(query, (rfid_code,), fetch_one=True)

        if user:
            print(f"‚úÖ Usu√°rio encontrado: {user[0]}")
            return user[0]
        else:
            print("‚ö†Ô∏è Usu√°rio n√£o encontrado!")
            return None
    except Exception as e:
        print(f"‚ùå Erro ao processar leitura RFID: {e}")
        return None

if __name__ == "__main__":
    print("üîç Teste de leitura RFID iniciado...")
    usuario = get_user_from_rfid()
    if usuario:
        print(f"üë§ Usu√°rio autenticado: {usuario}")
    else:
        print("‚ö†Ô∏è Nenhum usu√°rio encontrado.")
